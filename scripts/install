#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source _ynh_detect_arch
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#================================================

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

architecture=$(ynh_detect_arch)
# Check machine architecture (in particular, we don't support ARM and 32bit machines)
if [ $architecture == "i386" ]
then
	ynh_die --message="Sorry, because of nodejs framework, this app can't be installed on i386 (32 bits) machine."
fi

final_path="/var/www/$app"
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path "$path_url")

# Check web path availability
ynh_webpath_available "$domain" "$path_url"
# Register (book) web path
ynh_webpath_register "$app" "$domain" "$path_url"

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set "$app" domain "$domain"
ynh_app_setting_set "$app" path "$path_url"

#=================================================
# DEFAULT SETTINGS
#=================================================

port=$(ynh_find_port 9876)
salt=$(ynh_string_random 40)

ynh_app_setting_set "$app" port "$port"
ynh_app_setting_set "$app" salt "$salt"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_script_progression --message="Installing app dependencies"
ynh_install_app_dependencies $pkg_dependencies

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_app_setting_set "$app" final_path "$final_path"

# Download, check integrity, uncompress and patch the source from app.src
ynh_script_progression --message="Downloading app from sources"
ynh_setup_source "$final_path"
mkdir "$final_path/data"

#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config

if [ "$path_url" != "/" ]
then
	ynh_replace_string "^#sub_path_only" "" "/etc/nginx/conf.d/$domain.d/$app.conf"
fi
ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================

ynh_script_progression --message="Creating system user"
ynh_system_user_create "$app"

#=================================================
# SPECIFIC SETUP
#=================================================
# Install nodejs
#=================================================

ynh_script_progression --message="Installing nodejs"
ynh_install_nodejs 12

#=================================================
# Install weboob with pip
#=================================================

ynh_script_progression --message="Installing weboob"
virtualenv --python=python3 --system-site-packages "${final_path}/venv"
(
	set +o nounset
	source "${final_path}/venv/bin/activate"
	set -o nounset

	pip install --upgrade pip
	pip install weboob html2text simplejson BeautifulSoup4 PyExecJS pdfminer.six --ignore-installed
)

#=================================================
# Install Kresus with npm
#=================================================

ynh_script_progression --message="Installing app"
ynh_use_nodejs
(
	cd "$final_path"
	chown -R "$app": "$final_path"

	# ynh_npm only exists for YunoHost 3.8+
	"$nodejs_path/npm" install --production --unsafe-perm
)

#=================================================
# Setup Kresus postgresql database
#=================================================

db_name="$app"
db_user="$app"

ynh_script_progression --message="Setting up database"
ynh_psql_test_if_first_run
ynh_psql_setup_db "$db_user" "$db_name"
db_pwd=$(ynh_app_setting_get "$app" psqlpwd)

#=================================================
# CONFIGURE KRESUS
#=================================================

cp ../conf/config.ini "$final_path/config.ini"

ynh_replace_string "__PORT__"          "$port"               "$final_path/config.ini"
ynh_replace_string "__PATH__"          "$path_url"           "$final_path/config.ini"
ynh_replace_string "__FINALPATH__"     "$final_path"         "$final_path/config.ini"
ynh_replace_string "__SALT__"          "$salt"               "$final_path/config.ini"
ynh_replace_string "__APP__"           "$app"                "$final_path/config.ini"
ynh_replace_string "__DOMAIN__"        "$domain"             "$final_path/config.ini"
ynh_replace_string "__DB_NAME__"       "$db_user"            "$final_path/config.ini"
ynh_replace_string "__DB_USER__"       "$db_name"            "$final_path/config.ini"
ynh_replace_string "__DB_PASSWORD__"   "$db_pwd"             "$final_path/config.ini"


# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$final_path/config.ini"

#=================================================
# SETUP SYSTEMD
#=================================================

ynh_replace_string "__NODEJS__"   "$nodejs_path"              ../conf/systemd.service
ynh_replace_string "__ENV_PATH__" "$PATH"                     ../conf/systemd.service
ynh_replace_string "__NODEPATH__" "$(dirname "$nodejs_path")" ../conf/systemd.service

# Create a dedicated systemd config
ynh_script_progression --message="Creating systemd configuration"
ynh_add_systemd_config

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Reset permissions
chown -R root:root "$final_path"

# Set permissions to app files
chown -R "$app":"$app" "$final_path/data/"
chmod -R 750 "$final_path/data/"

# Set permissions to config file
chown "$app" "$final_path/config.ini"
chmod 600 "$final_path/config.ini"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start"

#=================================================
# RELOAD NGINX
#=================================================

ynh_script_progression --message="Reloading nginx"
service nginx reload

#=================================================
# SEND README TO ADMIN
#=================================================

message="
Domain: $domain
Path  : $path_url
Config: $final_path/config.ini

Please remember the default behavior of YunoHost when installing a new app is: everyone has access to the app.
This may be an issue for Kresus as it is a personal tool. Please remember to edit access rights in the YunoHost web administration panel or using command line interface.

Note about config.ini: this package will regenerate the config file on upgrade.
If you changed it manually and upgrade Kresus, you'll find a backup in $final_path.

Are you facing an issue, want to improve this app or say thank you?
Please open a new issue in this project: https://github.com/YunoHost-Apps/kresus_ynh
"
ynh_send_readme_to_admin "$message"

ynh_script_progression --message="Installation of $app completed" --last